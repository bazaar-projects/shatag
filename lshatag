#!/bin/bash
# shatag, Copyright 2010 Maxime Augier
# Distributed under the terms of the GNU General Public License (GPL)

force=false

while getopts "f" flag; do
	case $flag in
		f) force=true ;;
	esac
done
let s=$OPTIND-1
shift $s

htag() {
	file="$1"
	if [ -f "$file" ] ; then

                DATE=`date -r "$file" +%s`
		ODATE=`getfattr --only-values -n user.htag.ts "$file" 2>/dev/null`
		HTAG=`getfattr --only-values -n user.htag.sha256 "$file" 2>/dev/null` 
		if [ "0$DATE" -ne "0$ODATE" ]; then
			if $force; then
				mkshatag "$file" >/dev/null 2>&1
				HTAG=`getfattr --only-values -n user.htag.sha256 "$file" 2>/dev/null`
			else
				if [ -z "$HTAG" ]; then
					HTAG="<unknown>"
				else
					HTAG="<outdated>"
				fi
			fi
		fi

		echo -n "$HTAG  "
		echo "$file"

		
	fi
}

if [ "$1" = "--help" ] || [ "$1" = "-?" ]; then
	echo 'Usage: lshtag [FILE..]' >&2
	echo '  Displays the cached checksum for a file, in a format similar to sha256(1)' >&2
	echo '  If the checksum is absent, "<unknown>" will be displayed.' >&2
	echo '  If the checksum is older than the file modification time, "<outdated>" will be displayed.' >&2
	exit 1;
fi

if [ $# -eq 0 ]; then
	for file in *; do htag "$file"; done
else
	for file in "$@"; do htag "$file"; done
fi
